<apex:component controller="VFC01_WSCallout">
    <apex:attribute name="wsname" description="web service name" type="String" required="true"/>
    <apex:attribute name="params" description="web service parameters" type="String" required="true"/>
    <apex:attribute name="template" description="template name" type="String" required="true"/>
    <apex:attribute name="countInc" description="used to determine number of rows to increment" type="String"/>

    <apex:stylesheet value="{!URLFOR($Resource.SLDS202_HV1, '/assets/styles/salesforce-lightning-design-system.min.css')}"/>
    <!-- SCSMO 20161125 added svg4everybody script to display svg icon for IE11-->
    <apex:includeScript value="{!URLFOR($Resource.svg4everybody, 'svg4everybody.legacy.js')}"/>

    <apex:includelightning />

    <div id="xi-main" class="slds"> 
        <!-- Notification -->
        <c:C00_LightningErrorNotification />
        <!-- Loading Spinner -->
        <c:C00_LightningSpinner />
        <!-- Lightning component container -->
        <div id="xi-lntgn" />              
    </div>
    <script>
        console.log('#template= ' , '{!template}' );
        svg4everybody(); // SCSMO 20161125 manually call function
        var template = {};
    	var policyID = '';
        
        //DMU: 09/09/16 - useStatic is used temporarily to obtain dummy json in case WS fail
        var useStatic = "{!$CurrentPage.parameters.istest}"; // the parameter to pass to the ws
        var isTest = false;
        if(typeof useStatic != 'undefined' && useStatic == "true") { 
            isTest = true;
        }
    
        //var params = '{!params}';
        console.log('##params = ', '{!params}');

        var formatParam = function(params){
            var originalParams = params;
            try {
                //param is in JSON when called from inboundapi, try to convert else return original value
                var jsonObj = new Object(); 
                jsonObj =JSON.parse(params);
                console.log('#jsonObj = ', JSON.parse(params));
                policyID = jsonObj.policyId;
                params = 'policyNumber='+ jsonObj.policyNumber.replace('GI:','') + '&documentClass=Policy&PolicyId='+jsonObj.policyId;
                console.log('#params = ' + params);                
            } catch (e) {
                return originalParams;
            }
            return params;
        };

        var params = formatParam('{!params}');
		console.log("#formated params: "+ params);
    	policyID = params.split("policyId=")[1]; 
        // Get Template
        VFC01_WSCallout.retrieveTemplate('{!template}', true, processTemplate);

        // Get the increment count from apex controller
        VFC01_WSCallout.getWSRowCountIncrement(
            '{!wsname}', function (result, event) {
                if (event.status) {
                    countInc = result;
                } else {
                    showError(event.message);
                    hideSpinner();                    
                }
            }
        );

        

        // retrieveTemplate callback
        function processTemplate(result, event){
            console.log('template', result);
            template = result;

            if(!template.Exception){
                VFC01_WSCallout.runRequestContinuation('{!wsname}', params, createComponent);
                console.log('#template CallOut');
                console.log('#wsname: '+'{!wsname}');
            }else{
                showError(template.Exception);
                hideSpinner(); 
            }   
        };

        function createComponent(calloutResp, event){
            console.log('## CRESULT', calloutResp);
            console.log('## isTest', isTest);
            console.log('## params', params);
			
            if(calloutResp === null) {
                showError(event.message);
                hideSpinner();
            }
            else if((calloutResp.RetrieveDocumentListResponse && !calloutResp.RetrieveDocumentListResponse.exception)
               || (calloutResp.RetrievePolicyChangeTransactionListResponse && !calloutResp.Exception)
               || (calloutResp.RetrievePaymentListResponse) ){
                console.log('## enter LC03 - PolicyID: '+policyID);
                $Lightning.use("c:LA03_GenerateListLayout",
                    function() {
                        $Lightning.createComponent("c:LC03_GenerateListLayout",
                        {
                            "wsObj"     : calloutResp,
                            "template"  : template,
                            "isTest"    : isTest,
                            "countIncrement" : parseInt(countInc),
                            "policyId"	: policyID,
                            "policyNo"	: calloutResp.policyNo
                        },
                        "xi-lntgn",
                        function(cmp) {
                            //hide spinner here to show loading progress when LC content is being built
                            hideSpinner();
                        });
                    }); 
            }                    
            else if(calloutResp.Exception){
                showError(calloutResp.Exception);     
                hideSpinner();                        
            }
            
            
        }
    </script>
</apex:component>